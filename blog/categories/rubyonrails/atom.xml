<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rubyonrails | My Octopress Blog]]></title>
  <link href="http://oneraghavan.github.io/blog/categories/rubyonrails/atom.xml" rel="self"/>
  <link href="http://oneraghavan.github.io/"/>
  <updated>2013-08-16T16:57:22+05:30</updated>
  <id>http://oneraghavan.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ubuntu for Ruby on Rails Development 2]]></title>
    <link href="http://oneraghavan.github.io/blog/2013/06/28/ubuntu-for-ruby-on-rails-development-2/"/>
    <updated>2013-06-28T16:54:00+05:30</updated>
    <id>http://oneraghavan.github.io/blog/2013/06/28/ubuntu-for-ruby-on-rails-development-2</id>
    <content type="html"><![CDATA[<p>This is the second part of building Ruby on Rails development on Ubuntu. This part
will discuse about database, deployment method, and text editor.</p>

<!-- more -->


<h2>Postgresql</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu for Ruby on Rails Development]]></title>
    <link href="http://oneraghavan.github.io/blog/2013/06/14/ubuntu-for-rails-development/"/>
    <updated>2013-06-14T06:55:00+05:30</updated>
    <id>http://oneraghavan.github.io/blog/2013/06/14/ubuntu-for-rails-development</id>
    <content type="html"><![CDATA[<p>Setting up Ubuntu for <a href="http://rubyonrails.org">Ruby on Rails</a> development is very easy. Even it&rsquo;s not as easy
as installing Rails in Windows, developing Rails in Ubuntu is way better than in
Windows. I will show you how to build a good environment for Rails development in
Ubuntu 13.04 (and work on lower version to).</p>

<!-- more -->


<h2>Installing Ruby Version Manager (RVM)</h2>

<p>Before installing <a href="http://rvm.io">RVM</a>, Ruby, RubyGems, Rails, etc we need install some required packages
including git and nodejs.</p>

<pre><code>$ sudo apt-get install build-essential curl git git-core nodejs
</code></pre>

<p>RVM is a command-line tool which allows you to easily install, manage, and work
with multiple ruby environments from interpreters to sets of gems. Install RVM
from command-line:</p>

<pre><code>$ curl -L https://get.rvm.io | bash
</code></pre>

<p>To get RVM work flawlessly we need to add a line to <code>.bashrc</code> on our home directory.</p>

<pre><code>$ echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; source "$HOME/.rvm/scripts/rvm"' &gt;&gt; ~/.bashrc
</code></pre>

<p>That line will load RVM into a shell session as a function. Check our RVM installation
from command-line:</p>

<pre><code>$ type rvm | head -1
</code></pre>

<p>If the output is <code>rvm is a function</code> we have a very functionally RVM. Installing Ruby need several
additional packages, we can use RVM to automatically install those packages:</p>

<pre><code>$ rvm requirements
</code></pre>

<p>After installing additional packages we can start install Ruby using RVM.</p>

<p><em>Notes: This RVM installation method is for single user only, to install for multi user
run those commands from root.</em></p>

<h2>Installing Ruby on Rails</h2>

<p>We use RVM to install Ruby binary, with RVM we can install many version of Ruby and simply manage it. To see
list of Ruby version:</p>

<pre><code>$ rvm list known
</code></pre>

<p>To install Ruby 1.9.3-p429 or Ruby 2.0.0-p0</p>

<pre><code>$ rvm install 1.9.3
$ rvm install 2.0.0p0
</code></pre>

<p>RVM will automatically install Ruby and RubyGems. If there are no Ruby binaries available, RVM will build it for source.
This may take a while depending on our CPU. Set a Ruby version to use it as default Ruby:</p>

<pre><code>$ rvm use 1.9.3 --default
</code></pre>

<p>After we have a working Ruby binary, we can installing Rails by using:</p>

<pre><code>$ gem install rails --no-rdoc --no-ri
</code></pre>

<p>If you do not want install rdoc and ri documentation every installing a gem, add this line to <code>.gemrc</code> on home directory:</p>

<pre><code>$ echo 'gem: --no-rdoc --no-ri' &gt;&gt; ~/.gemrc
</code></pre>

<p>You may have to create <code>.gemrc</code> manually.</p>

<h2>Git Configuration</h2>

<p>Now that you have Git installed, it&rsquo;s time to configure your settings.</p>

<h3>Username and Email</h3>

<p>First you need to tell git your name, so that it can properly label the commits you make.</p>

<pre><code>$ git config --global user.name "Your Name Here"
</code></pre>

<p>Git saves your email address into the commits you make.</p>

<pre><code>$ git config --global user.email "your_email@example.com"
</code></pre>

<p>After setting up the basic environment you are ready to create Rails project. The advance environment (database, deployment, etc) are in the second part of this post.</p>
]]></content>
  </entry>
  
</feed>
